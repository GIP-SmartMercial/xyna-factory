{
  "meta": {
    "Test Reference": "Open",
    "created": "15.7.2020",
    "updated": "15.7.2020"
  },
  "operations": [
    {
      "operation": "setRandom",
      "variable": "!rnd!",
      "seed": "order_types"
    },
    {
      "data": [
        {
          "!GuiHttp%252F!": "default%20workspace"
        },
        {
          "!startorder!": "startorder"
        },
        {
          "!xmcp.factorymanager.ordertypes.ChangeOrderType!": "xmcp.factorymanager.ordertypes.ChangeOrderType"
        },
        {
          "!xmcp.factorymanager.ordertypes.OrderType!": "xmcp.factorymanager.ordertypes.OrderType"
        },
        {
          "!GuiHttp!": "default workspace"
        },
        {
          "!1.1.99!": "1.1.99"
        },
        {
          "!Xyna_Fractal_Workflow!": "Xyna Fractal Workflow"
        },
        {
          "!xnwh.persistence.Store!": "xnwh.persistence.Store"
        },
        {
          "!xmcp.factorymanager.DestinationType!": "xmcp.factorymanager.DestinationType"
        },
        {
          "!xmcp.factorymanager.ParameterInheritanceRule!": "xmcp.factorymanager.ParameterInheritanceRule"
        },
        {
          "!autotest.generated!": "autotest.generated.order_types.!rnd!"
        },
        {
          "!xmcp.factorymanager.ordertypes.Capacity!": "xmcp.factorymanager.ordertypes.Capacity"
        },
        {
          "!Workspace!": "Workspace"
        },
        {
          "!default_workspace!": "default workspace"
        },
        {
          "!xmcp.Workspace!": "xmcp.Workspace"
        },
        {
          "!DefaultPlanning!": "DefaultPlanning"
        },
        {
          "!xmcp.factorymanager.ordertypes.GetOrderTypes!": "xmcp.factorymanager.ordertypes.GetOrderTypes"
        },
        {
          "!1.2!": "1.2"
        },
        {
          "!asc!": "asc"
        },
        {
          "!Name!": "Name"
        },
        {
          "!xmcp.tables.datatypes.TableColumn!": "xmcp.tables.datatypes.TableColumn"
        },
        {
          "!name!": "name"
        },
        {
          "!Application!": "Application"
        },
        {
          "!application!": "application"
        },
        {
          "!Version!": "Version"
        },
        {
          "!version!": "version"
        },
        {
          "!workspace!": "workspace"
        },
        {
          "!Execution_Destination_Type/Name!": "Execution Destination Type/Name"
        },
        {
          "!executionDestination.name!": "executionDestination.name"
        },
        {
          "!Used_Capacities!": "Used Capacities"
        },
        {
          "!usedCapacities!": "usedCapacities"
        },
        {
          "!Priority!": "Priority"
        },
        {
          "!priority!": "priority"
        },
        {
          "!Monitoring_Level!": "Monitoring Level"
        },
        {
          "!monitoringLevel!": "monitoringLevel"
        },
        {
          "!xmcp.tables.datatypes.TableInfo!": "xmcp.tables.datatypes.TableInfo"
        },
        {
          "!ZetaFramework!": "ZetaFramework"
        },
        {
          "!0.6.33!": "0.6.33"
        }
      ],
      "operation": "multiSet"
    },
    {
      "operation": "call",
      "payload": {
        "async": false,
        "input": [
          {
            "$meta": {
              "fqn": "!xmcp.factorymanager.ordertypes.OrderType!",
              "rtc": {
                "workspace": "default workspace"
              }
            },
            "cleanupDestination": {
              "$meta": {
                "fqn": "!xmcp.factorymanager.DestinationType!"
              }
            },
            "cleanupDestinationIsCustom": false,
            "executionDestination": {
              "$meta": {
                "fqn": "!xmcp.factorymanager.DestinationType!"
              },
              "name": "!xnwh.persistence.Store!",
              "type": "!Xyna_Fractal_Workflow!"
            },
            "executionDestinationIsCustom": true,
            "monitoringLevel": 5,
            "monitoringLevelIsCustom": false,
            "name": "!autotest.generated!",
            "parameterInheritanceRules": {
              "$list": [],
              "$meta": {
                "fqn": "!xmcp.factorymanager.ParameterInheritanceRule!"
              }
            },
            "planningDestination": {
              "$meta": {
                "fqn": "!xmcp.factorymanager.DestinationType!"
              },
              "name": "!DefaultPlanning!",
              "type": "!Xyna_Fractal_Workflow!"
            },
            "planningDestinationIsCustom": false,
            "priorityIsCustom": false,
            "requiredCapacities": {
              "$list": [],
              "$meta": {
                "fqn": "!xmcp.factorymanager.ordertypes.Capacity!"
              }
            },
            "runtimeContext": {
              "$meta": {
                "fqn": "!xmcp.Workspace!"
              },
              "name": "!default_workspace!",
              "revision": -1,
              "type": "!Workspace!"
            },
            "usedCapacities": "",
            "workspace": "!default_workspace!"
          }
        ],
        "orderType": "!xmcp.factorymanager.ordertypes.ChangeOrderType!"
      },
      "requestType": "POST",
      "url": "/runtimeContext/!GuiHttp%252F!/!startorder!"
    },
    {
      "operation": "call",
      "payload": {
        "async": false,
        "input": [
          {
            "$meta": {
              "fqn": "!xmcp.Workspace!",
              "rtc": {
                "workspace": "default workspace"
              }
            },
            "name": "!default_workspace!",
            "revision": -1,
            "type": "!Workspace!"
          },
          {
            "$meta": {
              "fqn": "xmcp.factorymanager.ordertypes.OrderTypeName"
            },
            "name": "!autotest.generated!"
          }
        ],
        "orderType": "xmcp.factorymanager.ordertypes.GetOrderType"
      },
      "requestType": "POST",
      "url": "/runtimeContext/!GuiHttp%252F!/!startorder!"
    },
    {
      "operation": "read",
      "pathInResponse": "output[0]/executionDestination/name",
      "targetVariable": "!output!",
      "unquoteResult": true
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!output!",
      "value": "xnwh.persistence.Store"
    }
  ]
}