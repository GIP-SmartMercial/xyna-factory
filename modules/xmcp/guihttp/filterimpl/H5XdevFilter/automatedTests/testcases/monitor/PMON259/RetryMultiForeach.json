{
  "meta":
  {
    "name": "twoRetriesSuccessTest",
    "description": "Execute a workflow with a Foreach within a Retry (loaded from app) and open audit",
    "created": "16.04.2020",
    "updated": "15.12.2020"
  },
  "operations":
  [
    {
      "data": [
	    {
          "!customFieldValues!": ["test", "", "", ""]
        },
        {
          "!GuiHttp%252F!": "GuiHttp%252F"
        },
        {
          "!startorder!": "startorder"
        },
        {
          "!xmcp.factorymanager.xynaproperties.ChangeXynaPro!": "xmcp.factorymanager.xynaproperties.ChangeXynaProperty"
        },
        {
          "!xyna.processmonitor.lazyloading.limit!": "xyna.processmonitor.lazyloading.limit"
        },
        {
          "!xmcp.factorymanager.xynaproperties.XynaProperty!": "xmcp.factorymanager.xynaproperties.XynaProperty"
        }
      ],
      "operation": "multiSet"
    },
    {
      "operation": "invoke",
      "functionName": "getRegressionApplication",
      "mapInput": {},
      "mapOutput":
      {
        "!url!": "!url!",
        "!applicationName!" : "!applicationName!",
        "!applicationVersion!": "!applicationVersion!"
      }
    },

	{ "comment": "**********************", "operation": "comment" },
    { "comment": "* no iteration limit *", "operation": "comment" },
	{ "comment": "**********************", "operation": "comment" },

	{
      "operation": "call",
      "payload": {
        "async": false,
        "input": [
          {
            "$meta": {
              "fqn": "!xmcp.factorymanager.xynaproperties.XynaProperty!"
            },
            "key": "!xyna.processmonitor.lazyloading.limit!",
            "value": "-1"
          }
        ],
        "orderType": "!xmcp.factorymanager.xynaproperties.ChangeXynaPro!"
      },
      "requestType": "POST",
      "url": "/runtimeContext/!GuiHttp%252F!/!startorder!"
    },
    {
      "operation": "invoke",
      "functionName": "runWorkflow",
      "mapInput":
      {
        "!workflowFQN!": "xmcp.h5x.regression.PMON103.RetryMultiForeachTest",
        "!input!": [{"$meta":{"fqn":"xmcp.h5x.regression.PMON30.RetryTestParameters","rtc":{"application":"!applicationName!","version":"!applicationVersion!"}},"necessaryReductions":2,"reducetionRetryLimit":2},{"$meta":{"fqn":"base.Text","rtc":{"workspace":"default workspace"}},"$list":[{"$meta":{"fqn":"base.Text"},"text":"List entry A"},{"$meta":{"fqn":"base.Text"},"text":"List entry B"}]},{"$meta":{"fqn":"base.math.IntegerNumber","rtc":{"workspace":"default workspace"}},"$list":[{"$meta":{"fqn":"base.math.IntegerNumber"},"value":0},{"$meta":{"fqn":"base.math.IntegerNumber"},"value":1}]}],
        "!customStringContainer!": "!customFieldValues!"
      },
      "mapOutput":
      {
        "!orderId!": "!orderId!",
        "!applicationName!": "!applicationName!",
        "!applicationVersion!": "!applicationVersion!"
      }
    },
    {
      "operation": "invoke",
      "functionName": "assertGeneralFields",
      "mapInput":
      {
        "!orderId!": "!orderId!",
        "!dataflowLength!": 15,
        "!retryLength!": 0,
        "!errorsLength!": 0,
        "!rollbackLength!": 0,
        "!customFieldValues!": "!customFieldValues!",
        "!applicationName!": "!applicationName!",
        "!applicationVersion!": "!applicationVersion!"
      }
    },

    { "comment": "check caught step - iteration 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!caughtStepId!",
      "pathInResponse": "info/$list[3]/id",
      "unquoteResult": "true"
    },
    {
      "operation": "read",
      "targetVariable": "!statusCaughtStep0!",
      "pathInResponse": "info/$list[id=!caughtStepId!]/iterations/$list[index=0]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!statusCaughtStep0!",
      "value": "Finished"
    },

    {
      "operation": "read",
      "targetVariable": "!orderId0!",
      "pathInResponse": "info/$list[id=!caughtStepId!]/iterations/$list[index=0]/runtimeInfo/orderId"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
      "variable": "!orderId0!",
      "value": "0"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeCaughtStep0!",
      "pathInResponse": "info/$list[id=!caughtStepId!]/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
      "variable": "!startTimeCaughtStep0!",
      "value": "0"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateCaughtStep0!",
      "pathInResponse": "info/$list[id=!caughtStepId!]/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateCaughtStep0!",
      "value": "!startTimeCaughtStep0!"
    },

    { "comment": "check caught step - iteration 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!statusCaughtStep1!",
      "pathInResponse": "info/$list[id=!caughtStepId!]/iterations/$list[index=1]/runtimeInfo/status",
      "unquoteResult": "true"
    },

    { "comment": "check caught step - iteration 2", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!statusCaughtStep2!",
      "pathInResponse": "info/$list[id=!caughtStepId!]/iterations/$list[index=2]/runtimeInfo/status",
      "unquoteResult": "true"
    },

    { "comment": "check executed catch - iteration 0", "operation": "comment" },

    {
	  "operation": "modification",
	  "variable": "!caughtStepId!",
	  "modification":
	  {
	    "operation": "replace",
		"toReplace": "step",
		"replacement": ""
	  }
	},
    {
      "operation": "read",
      "pathInResponse": "workflow/areas/$list[name=content]/items/$list[2]/areas/$list[name=errorHandling]/items/$list[0]/areas/$list[0]/items/$list[0]/id",
      "targetVariable": "!branchU677795884-0!",
      "unquoteResult": true
    },
    {
      "operation": "read",
      "targetVariable": "!branchId!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterations/$list[index=0]/runtimeInfo/id",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!branchId!",
      "value": "branch!caughtStepId!-0"
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionException!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterations/$list[index=0]/runtimeInfo/caughtException/exception",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!caughtExceptionException!",
      "value": "xmcp.h5x.regression.PMON30.IterationsLeftException"
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionStacktrace!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterations/$list[index=0]/runtimeInfo/caughtException/stacktrace",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "contains",
      "variable": "!caughtExceptionStacktrace!",
      "value": "at xmcp.h5x.regression.PMON30.IterationsLeftException."
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionMessage!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterations/$list[index=0]/runtimeInfo/caughtException/message",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "contains",
      "variable": "!caughtExceptionMessage!",
      "value": "xmcp.h5x.regression.PMON30.IterationsLeftException:"
    },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterations/$list[index=0]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "Finished"
    },

	{
      "operation": "read",
      "targetVariable": "!startTimeCatch0!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeCatch0!",
      "value": "!startTimeCaughtStep0!"
    },

    { "comment": "check executed catch - iteration 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!branchId!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterations/$list[index=1]/runtimeInfo/id",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!branchId!",
      "value": "branch!caughtStepId!-0"
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionException!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterations/$list[index=1]/runtimeInfo/caughtException/exception",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!caughtExceptionException!",
      "value": "xmcp.h5x.regression.PMON30.IterationsLeftException"
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionStacktrace!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterations/$list[index=1]/runtimeInfo/caughtException/stacktrace",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "contains",
      "variable": "!caughtExceptionStacktrace!",
      "value": "at xmcp.h5x.regression.PMON30.IterationsLeftException."
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionMessage!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterations/$list[index=1]/runtimeInfo/caughtException/message",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "contains",
      "variable": "!caughtExceptionMessage!",
      "value": "xmcp.h5x.regression.PMON30.IterationsLeftException:"
    },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterations/$list[index=1]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "Finished"
    },

	{
      "operation": "read",
      "targetVariable": "!startTimeCatch1!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterations/$list[index=1]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeCatch1!",
      "value": "!startTimeCatch0!"
    },

    { "comment": "check executed catch - iteration 2", "operation": "comment" },

    {
      "operation": "read",
      "pathInResponse": "workflow/areas/$list[name=content]/items/$list[2]/areas/$list[name=errorHandling]/items/$list[0]/areas/$list[0]/items/$list[1]/id",
      "targetVariable": "!branchU677795884-1!",
      "unquoteResult": true
    },
    {
      "operation": "read",
      "targetVariable": "!branchId!",
      "pathInResponse": "info/$list[id=!branchU677795884-1!]/iterations/$list[index=2]/runtimeInfo/id",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!branchId!",
      "value": "branch!caughtStepId!-1"
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionException!",
      "pathInResponse": "info/$list[id=!branchU677795884-1!]/iterations/$list[index=2]/runtimeInfo/caughtException/exception",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!caughtExceptionException!",
      "value": "xmcp.h5x.regression.PMON30.ExpiredException"
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionStacktrace!",
      "pathInResponse": "info/$list[id=!branchU677795884-1!]/iterations/$list[index=2]/runtimeInfo/caughtException/stacktrace",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "contains",
      "variable": "!caughtExceptionStacktrace!",
      "value": "at xmcp.h5x.regression.PMON30.ExpiredException."
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionMessage!",
      "pathInResponse": "info/$list[id=!branchU677795884-1!]/iterations/$list[index=2]/runtimeInfo/caughtException/message",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "contains",
      "variable": "!caughtExceptionMessage!",
      "value": "xmcp.h5x.regression.PMON30.ExpiredException:"
    },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=!branchU677795884-1!]/iterations/$list[index=2]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "Finished"
    },

	{
      "operation": "read",
      "targetVariable": "!startTimeCatch2!",
      "pathInResponse": "info/$list[id=!branchU677795884-1!]/iterations/$list[index=2]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeCatch2!",
      "value": "!startTimeCatch1!"
    },

    { "comment": "check retry - iteration 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=step26]/iterations/$list[index=0]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "Finished"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeRetry0!",
      "pathInResponse": "info/$list[id=step26]/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeRetry0!",
      "value": "!startTimeCatch0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateRetry0!",
      "pathInResponse": "info/$list[id=step26]/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeCatch1!",
      "value": "!lastUpdateRetry0!"
    },

	{ "comment": "check retry - iteration 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=step26]/iterations/$list[index=1]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "Finished"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeRetry1!",
      "pathInResponse": "info/$list[id=step26]/iterations/$list[index=1]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeRetry1!",
      "value": "!lastUpdateRetry0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateRetry1!",
      "pathInResponse": "info/$list[id=step26]/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeCatch2!",
      "value": "!lastUpdateRetry1!"
    },

	{ "comment": "check retry - iteration 2", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=step199]/iterations/$list[index=2]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "Finished"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeRetry2!",
      "pathInResponse": "info/$list[id=step199]/iterations/$list[index=2]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeRetry2!",
      "value": "!startTimeCatch2!"
    },

	{ "comment": "check outer foreach content area - outer foreach 0, retry 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent0-0!",
      "pathInResponse": "info/$list[id=step-306]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent0-0!",
      "value": "!startTimeCaughtStep0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent0-0!",
      "pathInResponse": "info/$list[id=step-306]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent0-0!",
      "value": "!startTimeForeachContent0-0!"
    },

	{ "comment": "check outer foreach content area - outer foreach 1, retry 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent1-0!",
      "pathInResponse": "info/$list[id=step-306]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent1-0!",
      "value": "!lastUpdateForeachContent0-0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent1-0!",
      "pathInResponse": "info/$list[id=step-306]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent1-0!",
      "value": "!startTimeForeachContent1-0!"
    },

	{ "comment": "check outer foreach content area - outer foreach 0, retry 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent0-1!",
      "pathInResponse": "info/$list[id=step-306]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent0-1!",
      "value": "!lastUpdateForeachContent1-0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent0-1!",
      "pathInResponse": "info/$list[id=step-306]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent0-1!",
      "value": "!startTimeForeachContent0-1!"
    },

	{ "comment": "check outer foreach content area - outer foreach 1, retry 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent1-1!",
      "pathInResponse": "info/$list[id=step-306]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent1-1!",
      "value": "!lastUpdateForeachContent0-1!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent1-1!",
      "pathInResponse": "info/$list[id=step-306]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent1-1!",
      "value": "!startTimeForeachContent1-1!"
    },
	{
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeRetry1!",
      "value": "!lastUpdateForeachContent1-1!"
    },

	{ "comment": "check inner foreach content area - outer foreach 0, inner foreach 0, retry 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "!statusCaughtStep0!"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent0-0-0!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent0-0-0!",
      "value": "!startTimeForeachContent0-0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent0-0-0!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent0-0-0!",
      "value": "!startTimeForeachContent0-0-0!"
    },

	{ "comment": "check inner foreach content area - outer foreach 0, inner foreach 1, retry 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "!statusCaughtStep0!"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent0-1-0!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent0-1-0!",
      "value": "!lastUpdateForeachContent0-0-0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent0-1-0!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent0-1-0!",
      "value": "!startTimeForeachContent0-1-0!"
    },

	{ "comment": "check inner foreach content area - outer foreach 1, inner foreach 0, retry 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "!statusCaughtStep0!"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent1-0-0!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent1-0-0!",
      "value": "!lastUpdateForeachContent0-1-0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent1-0-0!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent1-0-0!",
      "value": "!startTimeForeachContent1-0-0!"
    },

	{ "comment": "check inner foreach content area - outer foreach 1, inner foreach 1, retry 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "!statusCaughtStep0!"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent1-1-0!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent1-1-0!",
      "value": "!lastUpdateForeachContent1-0-0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent1-1-0!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent1-1-0!",
      "value": "!startTimeForeachContent1-1-0!"
    },

	{ "comment": "check inner foreach content area - outer foreach 0, inner foreach 0, retry 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent0-0-1!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent0-0-1!",
      "value": "!lastUpdateForeachContent1-1-0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent0-0-1!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent0-0-1!",
      "value": "!startTimeForeachContent0-0-1!"
    },

	{ "comment": "check inner foreach content area - outer foreach 0, inner foreach 1, retry 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent0-1-1!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent0-1-1!",
      "value": "!lastUpdateForeachContent0-0-1!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent0-1-1!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent0-1-1!",
      "value": "!startTimeForeachContent0-1-1!"
    },

	{ "comment": "check inner foreach content area - outer foreach 1, inner foreach 0, retry 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "!statusCaughtStep0!"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent1-0-1!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent1-0-1!",
      "value": "!lastUpdateForeachContent0-1-1!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent1-0-1!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent1-0-1!",
      "value": "!startTimeForeachContent1-0-1!"
    },

	{ "comment": "check inner foreach content area - outer foreach 1, inner foreach 1, retry 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "!statusCaughtStep0!"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent1-1-1!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent1-1-1!",
      "value": "!lastUpdateForeachContent1-0-1!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent1-1-1!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent1-1-1!",
      "value": "!startTimeForeachContent1-1-1!"
    },

	{ "comment": "*********************", "operation": "comment" },
    { "comment": "* iteration limit 2 *", "operation": "comment" },
	{ "comment": "*********************", "operation": "comment" },

	{
      "operation": "call",
      "payload": {
        "async": false,
        "input": [
          {
            "$meta": {
              "fqn": "!xmcp.factorymanager.xynaproperties.XynaProperty!"
            },
            "key": "!xyna.processmonitor.lazyloading.limit!",
            "value": "2"
          }
        ],
        "orderType": "!xmcp.factorymanager.xynaproperties.ChangeXynaPro!"
      },
      "requestType": "POST",
      "url": "/runtimeContext/!GuiHttp%252F!/!startorder!"
    },{
      "operation": "invoke",
      "functionName": "runWorkflow",
      "mapInput":
      {
        "!workflowFQN!": "xmcp.h5x.regression.PMON103.RetryMultiForeachTest",
        "!input!": [{"$meta":{"fqn":"xmcp.h5x.regression.PMON30.RetryTestParameters","rtc":{"application":"!applicationName!","version":"!applicationVersion!"}},"necessaryReductions":2,"reducetionRetryLimit":2},{"$meta":{"fqn":"base.Text","rtc":{"workspace":"default workspace"}},"$list":[{"$meta":{"fqn":"base.Text"},"text":"List entry A"},{"$meta":{"fqn":"base.Text"},"text":"List entry B"}]},{"$meta":{"fqn":"base.math.IntegerNumber","rtc":{"workspace":"default workspace"}},"$list":[{"$meta":{"fqn":"base.math.IntegerNumber"},"value":0},{"$meta":{"fqn":"base.math.IntegerNumber"},"value":1}]}],
        "!customStringContainer!": "!customFieldValues!"
      },
      "mapOutput":
      {
        "!orderId!": "!orderId!",
        "!applicationName!": "!applicationName!",
        "!applicationVersion!": "!applicationVersion!"
      }
    },
    {
      "operation": "invoke",
      "functionName": "assertGeneralFields",
      "mapInput":
      {
        "!orderId!": "!orderId!",
        "!dataflowLength!": 15,
        "!retryLength!": 0,
        "!errorsLength!": 0,
        "!rollbackLength!": 0,
        "!customFieldValues!": "!customFieldValues!",
        "!applicationName!": "!applicationName!",
        "!applicationVersion!": "!applicationVersion!"
      }
    },

    { "comment": "check caught step - iteration 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!caughtStepId!",
      "pathInResponse": "info/$list[3]/id",
      "unquoteResult": "true"
    },
    {
      "operation": "read",
      "targetVariable": "!statusCaughtStep0!",
      "pathInResponse": "info/$list[id=!caughtStepId!]/iterations/$list[index=0]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!statusCaughtStep0!",
      "value": "Finished"
    },

    {
      "operation": "read",
      "targetVariable": "!orderId0!",
      "pathInResponse": "info/$list[id=!caughtStepId!]/iterations/$list[index=0]/runtimeInfo/orderId"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
      "variable": "!orderId0!",
      "value": "0"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeCaughtStep0!",
      "pathInResponse": "info/$list[id=!caughtStepId!]/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
      "variable": "!startTimeCaughtStep0!",
      "value": "0"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateCaughtStep0!",
      "pathInResponse": "info/$list[id=!caughtStepId!]/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateCaughtStep0!",
      "value": "!startTimeCaughtStep0!"
    },

    { "comment": "check caught step - iteration 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!statusCaughtStep1!",
      "pathInResponse": "info/$list[id=!caughtStepId!]/iterations/$list[index=1]/runtimeInfo/status",
      "unquoteResult": "true"
    },

    { "comment": "check caught step - iteration 2", "operation": "comment" },

	{
      "operation": "assert",
	  "constraint": "fieldNotInResult",
	  "fieldName": "$list[index=2]",
	  "basePath": "info/$list[id=!caughtStepId!]/iterations"
    },

    { "comment": "check executed catch - iteration 0", "operation": "comment" },

    {
	  "operation": "modification",
	  "variable": "!caughtStepId!",
	  "modification":
	  {
	    "operation": "replace",
		"toReplace": "step",
		"replacement": ""
	  }
	},
    {
      "operation": "read",
      "pathInResponse": "workflow/areas/$list[name=content]/items/$list[2]/areas/$list[name=errorHandling]/items/$list[0]/areas/$list[0]/items/$list[0]/id",
      "targetVariable": "!branchU777795884-0!",
      "unquoteResult": true
    },
    {
      "operation": "read",
      "targetVariable": "!branchId!",
      "pathInResponse": "info/$list[id=!branchU777795884-0!]/iterations/$list[index=0]/runtimeInfo/id",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!branchId!",
      "value": "branch!caughtStepId!-0"
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionException!",
      "pathInResponse": "info/$list[id=!branchU777795884-0!]/iterations/$list[index=0]/runtimeInfo/caughtException/exception",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!caughtExceptionException!",
      "value": "xmcp.h5x.regression.PMON30.IterationsLeftException"
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionStacktrace!",
      "pathInResponse": "info/$list[id=!branchU777795884-0!]/iterations/$list[index=0]/runtimeInfo/caughtException/stacktrace",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "contains",
      "variable": "!caughtExceptionStacktrace!",
      "value": "at xmcp.h5x.regression.PMON30.IterationsLeftException."
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionMessage!",
      "pathInResponse": "info/$list[id=!branchU777795884-0!]/iterations/$list[index=0]/runtimeInfo/caughtException/message",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "contains",
      "variable": "!caughtExceptionMessage!",
      "value": "xmcp.h5x.regression.PMON30.IterationsLeftException:"
    },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=!branchU777795884-0!]/iterations/$list[index=0]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "Finished"
    },

	{
      "operation": "read",
      "targetVariable": "!startTimeCatch0!",
      "pathInResponse": "info/$list[id=!branchU777795884-0!]/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeCatch0!",
      "value": "!startTimeCaughtStep0!"
    },

    { "comment": "check executed catch - iteration 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!branchId!",
      "pathInResponse": "info/$list[id=!branchU777795884-0!]/iterations/$list[index=1]/runtimeInfo/id",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!branchId!",
      "value": "branch!caughtStepId!-0"
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionException!",
      "pathInResponse": "info/$list[id=!branchU777795884-0!]/iterations/$list[index=1]/runtimeInfo/caughtException/exception",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!caughtExceptionException!",
      "value": "xmcp.h5x.regression.PMON30.IterationsLeftException"
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionStacktrace!",
      "pathInResponse": "info/$list[id=!branchU777795884-0!]/iterations/$list[index=1]/runtimeInfo/caughtException/stacktrace",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "contains",
      "variable": "!caughtExceptionStacktrace!",
      "value": "at xmcp.h5x.regression.PMON30.IterationsLeftException."
    },

    {
      "operation": "read",
      "targetVariable": "!caughtExceptionMessage!",
      "pathInResponse": "info/$list[id=!branchU777795884-0!]/iterations/$list[index=1]/runtimeInfo/caughtException/message",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "contains",
      "variable": "!caughtExceptionMessage!",
      "value": "xmcp.h5x.regression.PMON30.IterationsLeftException:"
    },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=!branchU777795884-0!]/iterations/$list[index=1]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "Finished"
    },

	{
      "operation": "read",
      "targetVariable": "!startTimeCatch1!",
      "pathInResponse": "info/$list[id=!branchU777795884-0!]/iterations/$list[index=1]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeCatch1!",
      "value": "!startTimeCatch0!"
    },

    { "comment": "check executed catch - iteration 2", "operation": "comment" },

    {
      "operation": "read",
      "pathInResponse": "workflow/areas/$list[name=content]/items/$list[2]/areas/$list[name=errorHandling]/items/$list[0]/areas/$list[0]/items/$list[1]/id",
      "targetVariable": "!branchU777795884-1!",
      "unquoteResult": true
    },
	{
      "operation": "assert",
	  "constraint": "fieldNotInResult",
	  "fieldName": "$list[id=!branchU777795884-1!]",
	  "basePath": "info"
    },

    { "comment": "check retry - iteration 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=step26]/iterations/$list[index=0]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "Finished"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeRetry0!",
      "pathInResponse": "info/$list[id=step26]/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeRetry0!",
      "value": "!startTimeCatch0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateRetry0!",
      "pathInResponse": "info/$list[id=step26]/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeCatch1!",
      "value": "!lastUpdateRetry0!"
    },

	{ "comment": "check retry - iteration 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=step26]/iterations/$list[index=1]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "Finished"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeRetry1!",
      "pathInResponse": "info/$list[id=step26]/iterations/$list[index=1]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeRetry1!",
      "value": "!lastUpdateRetry0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateRetry1!",
      "pathInResponse": "info/$list[id=step26]/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeCatch2!",
      "value": "!lastUpdateRetry1!"
    },

	{ "comment": "check retry - iteration 2", "operation": "comment" },

    {
      "operation": "assert",
	  "constraint": "fieldNotInResult",
	  "fieldName": "$list[id=step199]",
	  "basePath": "info"
    },

	{ "comment": "check outer foreach content area - outer foreach 0, retry 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent0-0!",
      "pathInResponse": "info/$list[id=step-306]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent0-0!",
      "value": "!startTimeCaughtStep0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent0-0!",
      "pathInResponse": "info/$list[id=step-306]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent0-0!",
      "value": "!startTimeForeachContent0-0!"
    },

	{ "comment": "check outer foreach content area - outer foreach 1", "operation": "comment" },

	{
      "operation": "assert",
	  "constraint": "fieldNotInResult",
	  "fieldName": "$list[index=1]",
	  "basePath": "info/$list[id=step-306]/iterations"
    },

	{ "comment": "check outer foreach content area - outer foreach 0, retry 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent0-1!",
      "pathInResponse": "info/$list[id=step-306]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent0-1!",
      "value": "!lastUpdateForeachContent1-0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent0-1!",
      "pathInResponse": "info/$list[id=step-306]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent0-1!",
      "value": "!startTimeForeachContent0-1!"
    },

	{ "comment": "check inner foreach content area - outer foreach 0, inner foreach 0, retry 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!status!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/status",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!status!",
      "value": "!statusCaughtStep0!"
    },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent0-0-0!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent0-0-0!",
      "value": "!startTimeForeachContent0-0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent0-0-0!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent0-0-0!",
      "value": "!startTimeForeachContent0-0-0!"
    },

	{ "comment": "check inner foreach content area - outer foreach 0, inner foreach 1", "operation": "comment" },

	{
      "operation": "assert",
	  "constraint": "fieldNotInResult",
	  "fieldName": "$list[index=1]",
	  "basePath": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations"
    },

	{ "comment": "check outer foreach 1", "operation": "comment" },

	{
      "operation": "assert",
	  "constraint": "fieldNotInResult",
	  "fieldName": "$list[index=1]",
	  "basePath": "info/$list[id=step-303]/iterations"
    },

	{ "comment": "check inner foreach content area - outer foreach 0, inner foreach 0, retry 1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!startTimeForeachContent0-0-1!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/start"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeForeachContent0-0-1!",
      "value": "!lastUpdateForeachContent1-1-0!"
    },

    {
      "operation": "read",
      "targetVariable": "!lastUpdateForeachContent0-0-1!",
      "pathInResponse": "info/$list[id=step-303]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateForeachContent0-0-1!",
      "value": "!startTimeForeachContent0-0-1!"
    },

    { "comment": "reset property to default value", "operation": "comment" },

	{
      "operation": "call",
      "payload": {
        "async": false,
        "input": [
          {
            "$meta": {
              "fqn": "!xmcp.factorymanager.xynaproperties.XynaProperty!"
            },
            "key": "!xyna.processmonitor.lazyloading.limit!",
            "overwrittenDefaultValue": false
          }
        ],
        "orderType": "!xmcp.factorymanager.xynaproperties.ChangeXynaPro!"
      },
      "requestType": "POST",
      "url": "/runtimeContext/!GuiHttp%252F!/!startorder!"
    }
  ]
}
