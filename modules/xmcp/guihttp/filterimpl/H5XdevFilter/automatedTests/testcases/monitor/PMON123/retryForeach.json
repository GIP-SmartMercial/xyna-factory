{
  "meta":
  {
    "name": "twoRetriesSuccessTest",
    "description": "Execute a workflow with a Foreach within a Retry (loaded from app) and open audit",
    "created": "24.04.2020",
    "updated": "15.12.2020"
  },
  "operations":
  [
    {
      "operation": "set",
      "variable": "!customFieldValues!",
      "value": ["test", "", "", ""]
    },
    {
      "operation": "invoke",
      "functionName": "getRegressionApplication",
      "mapInput": {},
      "mapOutput": 
      { 
        "!url!": "!url!", 
        "!applicationName!" : "!applicationName!", 
        "!applicationVersion!": "!applicationVersion!"
      }
    },
    {
      "operation": "invoke",
      "functionName": "runWorkflow",
      "mapInput": 
      {
        "!workflowFQN!": "xmcp.h5x.regression.PMON103.RetryForeachTest",
        "!input!": [{"$meta":{"fqn":"xmcp.h5x.regression.PMON30.RetryTestParameters","rtc":{"application":"!applicationName!","version":"!applicationVersion!"}},"necessaryReductions":2,"reducetionRetryLimit":2},{"$meta":{"fqn":"base.Text","rtc":{"application":"!applicationName!","version":"!applicationVersion!"}},"$list":[{"$meta":{"fqn":"base.Text"},"text":"List entry A"},{"$meta":{"fqn":"base.Text"},"text":"List entry B"}]}],
        "!customStringContainer!": "!customFieldValues!"
      },
      "mapOutput": 
      { 
        "!orderId!": "!orderId!",
        "!applicationName!": "!applicationName!",
        "!applicationVersion!": "!applicationVersion!"
      }
    },
    {
      "operation": "invoke",
      "functionName": "assertGeneralFields",
      "mapInput":
      {
        "!orderId!": "!orderId!",
        "!dataflowLength!": 13,
        "!retryLength!": 0,
        "!errorsLength!": 0,
        "!rollbackLength!": 0,
        "!customFieldValues!": "!customFieldValues!",
        "!applicationName!": "!applicationName!",
        "!applicationVersion!": "!applicationVersion!"
      }
    },

    { "comment": "check caught step", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!caughtStepId!",
      "pathInResponse": "info/$list[3]/id",
      "unquoteResult": "true"
    },
	{
      "operation": "read",
      "targetVariable": "!iterationContainerKey!",
      "pathInResponse": "info/$list[id=!caughtStepId!]/iterationContainerKey",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!iterationContainerKey!",
      "value": "!caughtStepId!"
    },

    { "comment": "check executed catch", "operation": "comment" },

    {
      "operation": "read",
      "pathInResponse": "workflow/areas/$list[name=content]/items/$list[2]/areas/$list[name=errorHandling]/items/$list[0]/areas/$list[0]/items/$list[0]/id",
      "targetVariable": "!branchU677795884-0!",
      "unquoteResult": true
    },
    {
      "operation": "read",
      "targetVariable": "!iterationContainerKey!",
      "pathInResponse": "info/$list[id=!branchU677795884-0!]/iterationContainerKey",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!iterationContainerKey!",
      "value": "!caughtStepId!"
    },

    { "comment": "check retry - iteration 0/1", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!iterationContainerKey!",
      "pathInResponse": "info/$list[id=step26]/iterationContainerKey",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!iterationContainerKey!",
      "value": "!caughtStepId!"
    },
    
    { "comment": "check retry - iteration 2", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!iterationContainerKey!",
      "pathInResponse": "info/$list[id=step199]/iterationContainerKey",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!iterationContainerKey!",
      "value": "!caughtStepId!"
    },
    
    { "comment": "check foreach content area - foreach 0", "operation": "comment" },

    {
      "operation": "read",
      "targetVariable": "!iterationContainerKey!",
      "pathInResponse": "info/$list[id=step-290]/iterationContainerKey",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!iterationContainerKey!",
      "value": "step290"
    },

	{
      "operation": "read",
      "targetVariable": "!iterationContainerKey!",
      "pathInResponse": "info/$list[id=step-290]/iterations/$list[index=0]/runtimeInfo/iterationContainerKey",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!iterationContainerKey!",
      "value": "!caughtStepId!"
    },

    { "comment": "check foreach content area - foreach 1", "operation": "comment" },

	{
      "operation": "read",
      "targetVariable": "!iterationContainerKey!",
      "pathInResponse": "info/$list[id=step-290]/iterations/$list[index=1]/runtimeInfo/iterationContainerKey",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!iterationContainerKey!",
      "value": "!caughtStepId!"
    },
    
    { "comment": "check foreach", "operation": "comment" },
    
    {
      "operation": "read",
      "targetVariable": "!iterationContainerKey!",
      "pathInResponse": "info/$list[id=step290]/iterationContainerKey",
      "unquoteResult": "true"
    },
    {
      "operation": "assert",
      "constraint": "equals",
      "variable": "!iterationContainerKey!",
      "value": "!caughtStepId!"
    },

    { "comment": "TODO: step104, 288, 146, 166", "operation": "comment" }
  ]
}
