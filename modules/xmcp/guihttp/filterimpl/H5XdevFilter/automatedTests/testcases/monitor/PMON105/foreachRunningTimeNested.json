{
  "meta":
  {
    "name": "twoForeachStepsTest",
	"description": "Execute a workflow containing two foreach steps with two iterations (loaded from app) and open audit. Both ForEach steps have two iterations.",
	"created": "08.04.2020",
	"updated": "08.04.2020"
  },
  "operations":
  [
    {
	  "operation": "set",
	  "variable": "!customFieldValues!",
	  "value": ["test", "", "", ""]
	},
    {
      "operation": "invoke",
      "functionName": "runWorkflow",
      "mapInput": 
	  {
	    "!workflowFQN!": "xmcp.h5x.regression.PMON32.MultiForeachWorkflow",
		"!input!": [],
		"!customStringContainer!": "!customFieldValues!"
	  },
      "mapOutput": 
	  { 
	    "!orderId!": "!orderId!",
		"!applicationName!": "!applicationName!",
		"!applicationVersion!": "!applicationVersion!"
      }
    },
	{
	  "operation": "invoke",
	  "functionName": "assertGeneralFields",
	  "mapInput":
	  {
	    "!orderId!": "!orderId!",
		"!dataflowLength!": 6,
		"!retryLength!": 0,
		"!errorsLength!": 0,
		"!rollbackLength!": 0,
		"!customFieldValues!": "!customFieldValues!",
		"!applicationName!": "!applicationName!",
		"!applicationVersion!": "!applicationVersion!"
	  }
	},

    { "comment": "check RunningTime of outer foreach", "operation": "comment" },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step21]/runningTime/start",
      "targetVariable": "!startTimeOuterForeach!"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
      "variable": "!startTimeOuterForeach!",
      "value": "0"
    },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step21]/runningTime/lastUpdate",
      "targetVariable": "!lastUpdateOuterForeach!"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateOuterForeach!",
      "value": "!startTimeOuterForeach!"
    },

    { "comment": "check RunningTime of inner foreach, iteration 0", "operation": "comment" },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step18]/iterations/$list[index=0]/runtimeInfo/runningTime/start",
      "targetVariable": "!startTimeInnerForeachIt0!"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeInnerForeachIt0!",
      "value": "!startTimeOuterForeach!"
    },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step18]/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate",
      "targetVariable": "!lastUpdateInnerForeachIt0!"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateInnerForeachIt0!",
      "value": "!startTimeInnerForeachIt0!"
    },

    { "comment": "check RunningTime of inner foreach, iteration 1", "operation": "comment" },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step18]/iterations/$list[index=1]/runtimeInfo/runningTime/start",
      "targetVariable": "!startTimeInnerForeachIt1!"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeInnerForeachIt1!",
      "value": "!lastUpdateInnerForeachIt0!"
    },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step18]/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate",
      "targetVariable": "!lastUpdateInnerForeachIt1!"
    },
    {
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateInnerForeachIt1!",
      "value": "!startTimeInnerForeachIt1!"
    },
	{
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateOuterForeach!",
      "value": "!lastUpdateInnerForeachIt1!"
    },

    { "comment": "check RunningTime of looped step iteration 0-0", "operation": "comment" },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step15]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/start",
      "targetVariable": "!startTimeMappingIt0-0!"
    },
	{
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeMappingIt0-0!",
      "value": "!startTimeInnerForeachIt0!"
    },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step15]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate",
      "targetVariable": "!lastUpdateMappingIt0-0!"
    },
	{
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateMappingIt0-0!",
      "value": "!startTimeMappingIt0-0!"
    },

    { "comment": "check RunningTime of looped step iteration 0-1", "operation": "comment" },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step15]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/start",
      "targetVariable": "!startTimeMappingIt0-1!"
    },
	{
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeMappingIt0-1!",
      "value": "!lastUpdateMappingIt0-0!"
    },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step15]/iterations/$list[index=0]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate",
      "targetVariable": "!lastUpdateMappingIt0-1!"
    },
	{
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateMappingIt0-1!",
      "value": "!startTimeMappingIt0-1!"
    },

    { "comment": "check RunningTime of looped step iteration 1-0", "operation": "comment" },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step15]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/start",
      "targetVariable": "!startTimeMappingIt1-0!"
    },
	{
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeMappingIt1-0!",
      "value": "!lastUpdateMappingIt0-1!"
    },
	{
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeMappingIt1-0!",
      "value": "!lastUpdateInnerForeachIt0!"
    },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step15]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=0]/runtimeInfo/runningTime/lastUpdate",
      "targetVariable": "!lastUpdateMappingIt1-0!"
    },
	{
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateMappingIt1-0!",
      "value": "!startTimeMappingIt1-0!"
    },

    { "comment": "check RunningTime of looped step iteration 1-1", "operation": "comment" },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step15]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/start",
      "targetVariable": "!startTimeMappingIt1-1!"
    },
	{
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!startTimeMappingIt1-1!",
      "value": "!lastUpdateMappingIt1-0!"
    },

    {
      "operation": "read",
      "pathInResponse": "info/$list[id=step15]/iterations/$list[index=1]/runtimeInfo/iterations/$list[index=1]/runtimeInfo/runningTime/lastUpdate",
      "targetVariable": "!lastUpdateMappingIt1-1!"
    },
	{
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateMappingIt1-1!",
      "value": "!startTimeMappingIt1-1!"
    },
	{
      "operation": "assert",
      "constraint": "bigger",
	  "orEquals": "true",
      "variable": "!lastUpdateInnerForeachIt1!",
      "value": "!lastUpdateMappingIt1-1!"
    }
  ]
}